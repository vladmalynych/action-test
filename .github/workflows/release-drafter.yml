name: Publish Release

on:
  push:
    branches:
      - master
    paths-ignore:
      - .github/**
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  release:
    name: üìåÔ∏è Release Drafter
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.release.outputs.tag_name }}
      branch_name: ${{ steps.branch_name.outputs.current_branch }}
    steps:
      - name: Get branch name
        id: branch_name
        uses: tj-actions/branch-names@b0f914ba0e7aa1e243b53df97447f71eb57da09a # pin@v5.2

      - name: Create Release
        id: release
        uses: release-drafter/release-drafter@e5ccf147077e46b0225a80bbe314d795d77bb7a2
        with:
          publish: ${{ github.ref == 'refs/heads/master' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_push_image:
    name: ‚öôÔ∏è Build & Push image
    needs:
      - release
    runs-on: ubuntu-latest
    steps:
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@69f6fc9d46f2f8bf0d5491e4aabe0bb8c6a4678a # v4.0.1
        with:
          images: twistopayments/ledger
          tags: |
            type=semver,pattern={{raw}},value=${{needs.release.outputs.tag_name}},enable=${{ needs.release.outputs.branch_name == 'master' }}
            type=raw,value=${{needs.release.outputs.branch_name}}.latest,enable=true

  patch_image:
    name: ü©π Patch manifest
    if: ${{ github.ref == 'refs/heads/master' }}
    needs:
      - release
      - build_push_image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'vladmalynych/action-update'
          #ssh-key: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0
          path: action-update

      - name: Patch manifests
        uses: fjogeleit/yaml-update-action@a77606cff437e552914df4f1db9dce1659e0b3f5 # v0.10.0
        with:
          valueFile: 'manifests/some_manifest/deployment.yml'
          propertyPath: 'spec.template.spec.containers[0].image'
          value: 'my/test:${{ needs.release.outputs.tag_name }}'
          repository: 'vladmalynych/action-update'
          branch: patch-ledger-${{ needs.release.outputs.tag_name }}
          targetBranch: master
          commitChange: true
          createPR: true
          message: "Patch Ledger deployment image ${{ needs.release.outputs.tag_name }}"
          description: |
            Patch Ledger deployment image:
              - `image: twistopayments/ledger:${{ needs.release.outputs.tag_name }}`
          labels: "automerge"
          token: ${{ secrets.GH_TOKEN }}
          workDir: action-update
